# -*- coding: utf-8 -*-
"""RandomForestRegressor_risk_reward.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1V923OusrYG2IAbyYmBTuPJ_vttAMt3dH
"""

#!pip install pandas_ta

import matplotlib.pyplot as plt
import pandas as pd
import lightgbm as lgb

from lightgbm import LGBMRegressor
from sklearn.ensemble import RandomForestRegressor
from sklearn.model_selection import train_test_split

df = pd.read_csv("EURUSD_Daily_197101040000_202009070000.csv", sep='\t')
df.tail()

#from pandas import to_datetime
#df['<DATE>'] = to_datetime(df['<DATE>'])
#df.tail()
df['<DATE>'] = df['<DATE>'].str.replace('.', '')

df['shifted_high'] = df['<HIGH>'].shift(periods=-1)
df['shifted_close'] = df['<CLOSE>'].shift(periods=-1)
df['shifted_low'] = df['<LOW>'].shift(periods=-1)

df = df.head(-8)
df = df.rename(columns={"<DATE>":"date",'<OPEN>':'open','<HIGH>':'high','<LOW>':'low','<CLOSE>':'close','<TICKVOL>':'tickvol','<VOL>':'volume'})
df.tail()

# from sklearn.preprocessing import MinMaxScaler
# #scale the training df
# scaler = MinMaxScaler()
# scaled = scaler.fit_transform(df)
# scaled_train = pd.DataFrame(scaled)
# scaled_train

#fit df to model
model = RandomForestRegressor()
features = ['date','open','high','low','close','tickvol']
target1 = 'shifted_high'
target2 = 'shifted_close'
target3 = 'shifted_low'
train = df

model.fit(train[features],train[target1])
print('For risk:reward predicted high:')
predicted = model.predict([[20200827,1.18297,1.19013,1.17621,1.18217,66444]]) 
print(predicted)

model.fit(train[features],train[target2])
print('For risk:reward predicted close:')
predicted = model.predict([[20200827,1.18297,1.19013,1.17621,1.18217,66444]]) 
print(predicted)

model.fit(train[features],train[target3])
print('For risk:reward predicted low:')
predicted = model.predict([[20200827,1.18297,1.19013,1.17621,1.18217,66444]]) 
print(predicted)

